

--PROCEDIMIENTO ALMACENADO DE DISTRIBUIDOR
CREATE OR REPLACE PROCEDURE MMVK_CRUD_DISTRIBUIDOR(
    CODIGO_DISTRIBUIDOR_P NUMBER,
    NOMBRE_DISTRIBUIDOR_P VARCHAR2,
    APELLIDO1_DISTRIBUIDOR_P VARCHAR2,
    APELLIDO2_DISTRIBUIDOR_P VARCHAR2,
    TELEFONO_DISTRIBUIDOR_P NUMBER,
    CODIGO_REGION_DISTRIBUIDOR_P NUMBER,
    OPERACION_P VARCHAR2
)
IS
BEGIN
    -- Bloqueo de la tabla para controlar la concurrencia
    LOCK TABLE MMVK_DISTRIBUIDOR IN ROW EXCLUSIVE MODE;
    
    -- PRIMERO SUBIMOS LA QUE CARGA LOS DATOS SI QUEREMOS(control de transacciones)
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_DISTRIBUIDOR (NOMBRE_DISTRIBUIDOR,APELLIDO1_DISTRIBUIDOR,APELLIDO2_DISTRIBUIDOR,TELEFONO_DISTRIBUIDOR,CODIGO_REGION_DISTRIBUIDOR) 
        VALUES (NOMBRE_DISTRIBUIDOR_P,APELLIDO1_DISTRIBUIDOR_P,APELLIDO2_DISTRIBUIDOR_P,TELEFONO_DISTRIBUIDOR_P,CODIGO_REGION_DISTRIBUIDOR_P);
    -- LUEGO LA DE MODIFICAR
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_DISTRIBUIDOR
        SET NOMBRE_DISTRIBUIDOR=NOMBRE_DISTRIBUIDOR_P,
            APELLIDO1_DISTRIBUIDOR=APELLIDO1_DISTRIBUIDOR_P,
            APELLIDO2_DISTRIBUIDOR=APELLIDO2_DISTRIBUIDOR_P,
            TELEFONO_DISTRIBUIDOR=TELEFONO_DISTRIBUIDOR_P
        WHERE CODIGO_DISTRIBUIDOR = CODIGO_DISTRIBUIDOR_P ;
    
    -- LA ULTIMA DE BORRAR
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_DISTRIBUIDOR
        WHERE CODIGO_DISTRIBUIDOR = CODIGO_DISTRIBUIDOR_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;


---------------------------------------------------------------------------------------------------

--PROCEDIMIENTO ALMACENADO DE DEPARTAMENTO
CREATE OR REPLACE PROCEDURE MMVK_CRUD_DEPARTAMENTO(
    CODIGO_DEPARTAMENTO_P NUMBER,
    NOMBRE_DEPARTAMENTO_P VARCHAR2,
    OPERACION_P VARCHAR2

)
IS
BEGIN
    -- Bloqueo de la tabla para controlar la concurrencia
    LOCK TABLE MMVK_DEPARTAMENTO IN ROW EXCLUSIVE MODE;
    
    -- PRIMERO SUBIMOS LA QUE CARGA LOS DATOS SI QUEREMOS(control de transacciones)
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_DEPARTAMENTO (NOMBRE_DEPARTAMENTO) 
        VALUES (NOMBRE_DEPARTAMENTO_P);
    -- LUEGO LA DE MODIFICAR
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_DEPARTAMENTO
        SET NOMBRE_DEPARTAMENTO=NOMBRE_DEPARTAMENTO_P
        WHERE CODIGO_DEPARTAMENTO = CODIGO_DEPARTAMENTO_P ;
    
    -- LA ULTIMA DE BORRAR
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_DEPARTAMENTO
        WHERE CODIGO_DEPARTAMENTO = CODIGO_DEPARTAMENTO_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;

---------------------------------------------------------------------------------------------------
--PROCEDIMIENTO ALMACENADO DE PROMOCIONES
CREATE OR REPLACE PROCEDURE MMVK_CRUD_PROMOCION(
    CODIGO_PROMOCION_P NUMBER,
    NOMBRE_PROMOCION_P VARCHAR2,
    FECHA_INICIO_PROMOCION_P DATE,
    FECHA_FIN_PROMOCION_P DATE,
    PORCENTAJE_DESCUENTO_PROMOCION_P NUMBER,
    CODIGO_PRODUCTO_P NUMBER,
    OPERACION_P VARCHAR2

)
IS
BEGIN
    -- Bloqueo de la tabla para controlar la concurrencia
    LOCK TABLE MMVK_PROMOCION IN ROW EXCLUSIVE MODE;
    
    -- PRIMERO SUBIMOS LA QUE CARGA LOS DATOS SI QUEREMOS(control de transacciones)
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_PROMOCION (NOMBRE_PROMOCION,FECHA_INICIO_PROMOCION,FECHA_FIN_PROMOCION,PORCENTAJE_DESCUENTO_PROMOCION,CODIGO_PRODUCTO) 
        VALUES (NOMBRE_PROMOCION_P,FECHA_INICIO_PROMOCION_P,FECHA_FIN_PROMOCION_P,PORCENTAJE_DESCUENTO_PROMOCION_P,CODIGO_PRODUCTO_P);
    -- LUEGO LA DE MODIFICAR
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_PROMOCION
        SET FECHA_INICIO_PROMOCION=FECHA_INICIO_PROMOCION_P,
            FECHA_FIN_PROMOCION=FECHA_FIN_PROMOCION_P,
            PORCENTAJE_DESCUENTO_PROMOCION=PORCENTAJE_DESCUENTO_PROMOCION_P
        WHERE CODIGO_PROMOCION=CODIGO_PROMOCION_P ;
    
    -- LA ULTIMA DE BORRAR
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_PROMOCION
        WHERE CODIGO_PROMOCION=CODIGO_PROMOCION_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;

---------------------------------------------------------------------------------------------------
--PROCEDIMIENTO ALMACENADO DE COMPRAS
CREATE OR REPLACE PROCEDURE MMVK_CRUD_COMPRA(
    CODIGO_COMPRA_P NUMBER,
    FECHA_COMPRA_P DATE,
    FECHA_REGISTRO_USUARIO_COMPRA_P DATE,
    CODIGO_CLIENTE_P NUMBER,
    CODIGO_CAJA_P NUMBER,
    OPERACION_P VARCHAR2

)
IS
BEGIN
    -- Bloqueo de la tabla para controlar la concurrencia
    LOCK TABLE MMVK_COMPRA IN ROW EXCLUSIVE MODE;
    
    -- PRIMERO SUBIMOS LA QUE CARGA LOS DATOS SI QUEREMOS(control de transacciones)
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_COMPRA(FECHA_COMPRA,FECHA_REGISTRO_USUARIO_COMPRA,CODIGO_CLIENTE,CODIGO_CAJA) 
        VALUES (FECHA_COMPRA_P,FECHA_REGISTRO_USUARIO_COMPRA_P,CODIGO_CLIENTE_P,CODIGO_CAJA_P);
    -- LUEGO LA DE MODIFICAR
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_COMPRA
        SET FECHA_COMPRA=FECHA_COMPRA_P
        WHERE CODIGO_COMPRA=CODIGO_COMPRA_P;
    
    -- LA ULTIMA DE BORRAR
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_COMPRA
        WHERE CODIGO_COMPRA=CODIGO_COMPRA_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;


---------------------------------------------------------------------------------------------------
--PROCEDIMIENTO ALMACENADO DE BOLETA
CREATE OR REPLACE PROCEDURE MMVK_CRUD_BOLETA(
    CODIGO_CUERPO_BOLETA_P NUMBER,
    PRECIO_CUERPO_BOLETA_P NUMBER,
    CANTIDAD_CUERPO_BOLETA_P NUMBER,
    CODIGO_CABEZA_BOLETA_P NUMBER,
    CODIGO_PRODUCTO_P NUMBER,
    OPERACION_P VARCHAR2

)
IS
BEGIN
    -- Bloqueo de la tabla para controlar la concurrencia
    LOCK TABLE MMVK_CUERPO_BOLETA IN ROW EXCLUSIVE MODE;
    
    -- PRIMERO SUBIMOS LA QUE CARGA LOS DATOS SI QUEREMOS(control de transacciones)
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_CUERPO_BOLETA(PRECIO_CUERPO_BOLETA,CANTIDAD_CUERPO_BOLETA,CODIGO_CABEZA_BOLETA,CODIGO_PRODUCTO) 
        VALUES (PRECIO_CUERPO_BOLETA_P,CANTIDAD_CUERPO_BOLETA_P,CODIGO_CABEZA_BOLETA_P,CODIGO_PRODUCTO_P);
    -- LUEGO LA DE MODIFICAR
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_CUERPO_BOLETA
        SET PRECIO_CUERPO_BOLETA=PRECIO_CUERPO_BOLETA_P
        WHERE CODIGO_CUERPO_BOLETA=CODIGO_CUERPO_BOLETA_P;
    
    -- LA ULTIMA DE BORRAR
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_CUERPO_BOLETA
        WHERE CODIGO_CUERPO_BOLETA=CODIGO_CUERPO_BOLETA_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;
