CREATE OR REPLACE PROCEDURE MMVK_CRUD_CLIENTE(
    OPERACION_P VARCHAR2,
    CODIGO_REGION_CLIENTE_P NUMBER,
    CORREO_CLIENTE_P VARCHAR2,
    NOMBRE_CLIENTE_P VARCHAR2,
    APELLIDO1_CLIENTE_P VARCHAR2,
    APELLIDO2_CLIENTE_P VARCHAR2,
    CONTRASENA_CORREO_CLIENTE_P VARCHAR2
)
IS
BEGIN
    -- Bloqueo de la tabla para controlar la concurrencia
    LOCK TABLE MMVK_CLIENTES IN ROW EXCLUSIVE MODE;
    
    -- PRIMERO SUBIMOS LA QUE CARGA LOS DATOS SI QUEREMOS(control de transacciones)
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_CLIENTES (CODIGO_REGION_CLIENTE, CORREO_CLIENTE, NOMBRE_CLIENTE, APELLIDO1_CLIENTE, APELLIDO2_CLIENTE, CONTRASENA_CORREO_CLIENTE)
        VALUES (CODIGO_REGION_CLIENTE_P, CORREO_CLIENTE_P, NOMBRE_CLIENTE_P, APELLIDO1_CLIENTE_P, APELLIDO2_CLIENTE_P, CONTRASENA_CORREO_CLIENTE_P);
    -- LUEGO LA DE MODIFICAR
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_CLIENTES
        SET CONTRASENA_CORREO_CLIENTE = CONTRASENA_CORREO_CLIENTE_P
        WHERE CORREO_CLIENTE = CORREO_CLIENTE_P;
    
    -- LA ULTIMA DE BORRAR
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_CLIENTES
        WHERE CORREO_CLIENTE = CORREO_CLIENTE_P;
    END IF;

    COMMIT;

EXCEPTION
	WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;


CREATE OR REPLACE PROCEDURE MMVK_CRUD_TRABAJADOR(
    OPERACION_P VARCHAR2,
    CODIGO_TRABAJADOR_P NUMBER,
    NOMBRE_TRABAJADOR_P VARCHAR2,
    APELLIDO1_TRABAJADOR_P VARCHAR2,
    APELLIDO2_TRABAJADOR_P VARCHAR2,
    FECHA_CONTRATO_TRABAJADOR_P DATE,
    CODIGO_DEPARTAMENTO_P NUMBER,
    CODIGO_CARGO_TRABAJADOR_P NUMBER,
    CORREO_TRABAJADOR_P VARCHAR2,
    CONTRASENA_CORREO_TRABAJADOR_P VARCHAR2
)
IS
BEGIN
    -- Bloqueo de la tabla para controlar la concurrencia
    LOCK TABLE MMVK_TRABAJADOR IN ROW EXCLUSIVE MODE;

    -- PRIMERO SUBIMOS LA QUE CARGA LOS DATOS SI QUEREMOS(control de transacciones)
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_TRABAJADOR (NOMBRE_TRABAJADOR, APELLIDO1_TRABAJADOR, APELLIDO2_TRABAJADOR, FECHA_CONTRATO_TRABAJADOR, CODIGO_DEPARTAMENTO,CODIGO_CARGO_TRABAJADOR,CORREO_TRABAJADOR)
        VALUES (NOMBRE_TRABAJADOR_P, APELLIDO1_TRABAJADOR_P, APELLIDO2_TRABAJADOR_P, SYSDATE, CODIGO_DEPARTAMENTO_P, CODIGO_CARGO_TRABAJADOR_P,MMVK_EMAIL_TRABAJADOR(NOMBRE_TRABAJADOR_P,APELLIDO1_TRABAJADOR_P));
    -- LUEGO LA DE MODIFICAR
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_TRABAJADOR
        SET CONTRASENA_CORREO_TRABAJADOR=CONTRASENA_CORREO_TRABAJADOR_P
        WHERE CORREO_TRABAJADOR = CORREO_TRABAJADOR_P ;

    -- LA ULTIMA DE BORRAR
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_TRABAJADOR
        WHERE CODIGO_TRABAJADOR = CODIGO_TRABAJADOR_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;


CREATE OR REPLACE PROCEDURE MMVK_CRUD_PRODUCTO(
    CODIGO_PRODUCTO_P NUMBER,
    NOMBRE_PRODUCTO_P VARCHAR2,
    PESO_PRODUCTO_P VARCHAR2,
    FECHA_FABRICACION_PRODUCTO_P DATE,
    FECHA_CADUCIDAD_PRODUCTO_P DATE,
    PRECIO_COMPRA_PRODUCTO_P NUMBER,
    PRECIO_VENTA_PRODUCTO_P NUMBER,
    EXISTENCIA_PRODUCTO_P NUMBER,
    CODIGO_PAIS_ORIGEN_PRODUCTO_P NUMBER,
    CODIGO_DEPARTAMENTO_P NUMBER,
    OPERACION_P VARCHAR2
)
IS
BEGIN

    LOCK TABLE MMVK_PRODUCTO IN ROW EXCLUSIVE MODE;
    

    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_PRODUCTO (NOMBRE_PRODUCTO, PESO_PRODUCTO, FECHA_FABRICACION_PRODUCTO, 
            FECHA_CADUCIDAD_PRODUCTO, PRECIO_COMPRA_PRODUCTO, PRECIO_VENTA_PRODUCTO,EXISTENCIA_PRODUCTO, 
            CODIGO_PAIS_ORIGEN_PRODUCTO, CODIGO_DEPARTAMENTO) 
        VALUES (NOMBRE_PRODUCTO_P, PESO_PRODUCTO_P, FECHA_FABRICACION_PRODUCTO_P, 
            FECHA_CADUCIDAD_PRODUCTO_P, PRECIO_COMPRA_PRODUCTO_P, PRECIO_VENTA_PRODUCTO_P, EXISTENCIA_PRODUCTO_P, CODIGO_PAIS_ORIGEN_PRODUCTO_P, CODIGO_DEPARTAMENTO_P);

    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_PRODUCTO
        SET NOMBRE_PRODUCTO=NOMBRE_PRODUCTO_P,
            PESO_PRODUCTO=PESO_PRODUCTO_P,
            FECHA_FABRICACION_PRODUCTO=FECHA_FABRICACION_PRODUCTO_P,
            PRECIO_COMPRA_PRODUCTO=PRECIO_COMPRA_PRODUCTO_P,
            PRECIO_VENTA_PRODUCTO=PRECIO_VENTA_PRODUCTO_P,
            EXISTENCIA_PRODUCTO=EXISTENCIA_PRODUCTO_P,
            CODIGO_PAIS_ORIGEN_PRODUCTO=CODIGO_PAIS_ORIGEN_PRODUCTO_P,
            CODIGO_DEPARTAMENTO=CODIGO_DEPARTAMENTO_P
        WHERE CODIGO_PRODUCTO = CODIGO_PRODUCTO_P ;
    

    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_PRODUCTO
        WHERE CODIGO_PRODUCTO = CODIGO_PRODUCTO_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;


CREATE OR REPLACE PROCEDURE MMVK_CRUD_DEVOLUCION(
    CODIGO_DEVOLUCION_P NUMBER,
    FECHA_DEVOLUCION_P DATE,
    DESCRIPCION_DEVOLUCION_P VARCHAR2,
    CODIGO_PRODUCTO_P NUMBER,
    CODIGO_CLIENTE_P NUMBER,
    OPERACION_P VARCHAR2

)
IS
BEGIN
    
    LOCK TABLE MMVK_DEVOLUCION IN ROW EXCLUSIVE MODE;
    
    
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_DEVOLUCION (FECHA_DEVOLUCION, DESCRIPCION_DEVOLUCION, CODIGO_PRODUCTO, CODIGO_CLIENTE) 
        VALUES (FECHA_DEVOLUCION_P, DESCRIPCION_DEVOLUCION_P, CODIGO_PRODUCTO_P, CODIGO_CLIENTE_P);
    
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_DEVOLUCION
        SET DESCRIPCION_DEVOLUCION=DESCRIPCION_DEVOLUCION_P
        WHERE CODIGO_DEVOLUCION = CODIGO_DEVOLUCION_P ;
    
    
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_DEVOLUCION
        WHERE CODIGO_DEVOLUCION = CODIGO_DEVOLUCION_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;


CREATE OR REPLACE PROCEDURE MMVK_CRUD_CARRITO(
    CODIGO_CARRITO_P NUMBER,
    ESTADO_CARRITO_P NUMBER,
    CANTIDAD_CARRITO_P NUMBER,
    PRECIO_CARRITO_P NUMBER,
    CODIGO_PRODUCTO_P NUMBER,
    CODIGO_CLIENTE_P NUMBER,
    OPERACION_P VARCHAR2
)
IS
BEGIN
    
    LOCK TABLE MMVK_CARRITO IN ROW EXCLUSIVE MODE;
    
    
    IF UPPER(OPERACION_P) = 'I' THEN
        INSERT INTO MMVK_CARRITO (ESTADO_CARRITO, CANTIDAD_CARRITO, PRECIO_CARRITO, CODIGO_PRODUCTO, CODIGO_CLIENTE) 
        VALUES (ESTADO_CARRITO_P, CANTIDAD_CARRITO_P, PRECIO_CARRITO_P, CODIGO_PRODUCTO_P, CODIGO_CLIENTE_P);
    
    ELSIF UPPER(OPERACION_P) = 'U' THEN
        UPDATE MMVK_CARRITO
        SET ESTADO_CARRITO = ESTADO_CARRITO_P 
        WHERE CODIGO_CARRITO = CODIGO_CARRITO_P;
    
    
    ELSIF UPPER(OPERACION_P) = 'D' THEN
        DELETE FROM MMVK_CARRITO
        WHERE CODIGO_CARRITO = CODIGO_CARRITO_P;
    END IF;

    COMMIT;

EXCEPTION
    WHEN PROGRAM_ERROR THEN
        RAISE_APPLICATION_ERROR(-6501,'ERROR DE PROGRAMA');
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(+100,'NO DATA FOUND');
    WHEN STORAGE_ERROR THEN 
        RAISE_APPLICATION_ERROR(-6500,'SE ACABO LA MEMORIA O ES CORRUPTA');
    WHEN ROWTYPE_MISMATCH THEN
        RAISE_APPLICATION_ERROR(-6504,'ERROR DE ASIGNACION DE VARIABLES');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'ERROR INESPERADO');
    ROLLBACK;
END;